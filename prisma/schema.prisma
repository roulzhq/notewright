// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String    @id @default(cuid())
  title     String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime? // Soft delete field
  published Boolean   @default(false)
  content   String
  comments  Comment[]

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  blog   Blog   @relation(fields: [blogId], references: [id])
  blogId String

  @@index([title])
  @@map("posts")
}

model User {
  id            String         @id @default(cuid())
  name          String
  email         String         @unique
  emailVerified DateTime?
  password      String
  image         String?
  posts         Post[]
  blogRoles     UserBlogRole[]
  comments      Comment[]
  plan          Plan           @default(FREE)

  createdAt DateTime  @default(now())
  deletedAt DateTime? // Soft delete field

  @@index([email, name])
  @@map("users")
}

model Blog {
  id        String         @id @default(cuid())
  createdAt DateTime       @default(now())
  published Boolean        @default(false)
  name      String         @db.VarChar(255)
  userRoles UserBlogRole[]
  posts     Post[]

  deletedAt DateTime? // Soft delete field

  @@index([name])
  @@map("blogs")
}

model Comment {
  id      String      @id @default(cuid())
  content String
  type    CommentType @default(COMMENT)

  post        Post   @relation(fields: [postId], references: [id])
  postId      String
  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  deletedAt DateTime? // Soft delete field

  @@map("comments")
}

model UserBlogRole {
  id   String @id @default(cuid())
  role Role   @default(USER)

  user   User   @relation(fields: [userId], references: [id])
  userId String
  blog   Blog   @relation(fields: [blogId], references: [id])
  blogId String

  @@unique([userId, blogId]) // One role per blog
  @@map("user_blog_roles")
}

enum Role {
  USER
  MODERATOR
  AUTHOR
  ADMIN
  OWNER
}

enum Plan {
  FREE
  HOBBY
  PRO
}

enum CommentType {
  COMMENT
  REPLY
}
